-# This file is app/views/semesters/index.html.haml
!!! 5

- content_for :title, "Classes"

.row
  .span12.module#class-table
    %ul.nav.nav-tabs
      %li{active_if(@filter.empty?)}
        = link_to "All", semester_courses_path(@semester)
      %li{active_if(@filter[:enrollment] == 'overenrolled')}
        = link_to "Overenrolled", semester_courses_path(@semester, :filter_enrollment => 'overenrolled')
      %li{active_if(@filter[:enrollment] == 'underenrolled')}
        = link_to "Underenrolled", semester_courses_path(@semester, :filter_enrollment => 'underenrolled')
      %li.pull-right
        = link_to "+ Add Class", new_semester_course_path
        
    .module-content
      %table.data-table.full-width#courses
        %thead
          %tr.no-select
            %td
              %span.sort-by#sort-by-name
                Name
            %td
              %span.sort-by#sort-by-ptainstructor
                Instructor
            %td
              Day
            %td
              Time
            %td
              %span.sort-by#sort-by-room
                Room
            %td
              %span.sort-by#sort-by-enrolled
                Enrolled
            %td
        %tbody
          - if !@courses.empty?
            - @courses.each do |course|
              %tr.course-info
                %td.course-name
                  = link_to course.name, course_path(course)
                %td.course-instructor
                  - if course.ptainstructor
                    = link_to "#{course.ptainstructor.first_name} #{course.ptainstructor.last_name}", ptainstructor_path(course.ptainstructor)
                %td.course-days
                  = course.abbrev_days.join(", ")
                %td.course-time
                  - if course.start_time && course.end_time
                    = "#{course.start_time} - #{course.end_time}"
                %td.course-room
                  - if course.teacher
                    = course.teacher.classroom
                %td.course-enrolled{:class => course.overenrolled? || course.underenrolled? ? "warning" : ""}
                  = course.num_valid_enrollments
                  - if course.class_min_max_range && !course.class_min_max_range.blank?
                    &nbsp;
                    %span.muted= "(#{course.class_min_max_range})"
                %td.course-delete
                  = button_to "Delete", course_path(course), :method => :delete, :class => "btn btn-danger btn-mini edit-delete", 
                      :data => { :confirm => "Are you sure you want to delete \"#{course.name}\"?  Doing so will also delete all the enrollments for students that are associated with this course.  Are you really sure you want to delete \"#{course.name}\" course and all enrollments of students thare are associated with it?" }
          - else
            %tr
              %td.centered(colspan=7)
                None

- content_for :js do
  :javascript
    $(function() {
      rows = [];
      $("table#courses tbody tr.course-info").each(function() {
        $tr = $(this);
        $courseName = $.trim($tr.children(".course-name").text());
        $courseInstructor = $.trim($tr.children(".course-instructor").text());
        $courseRoom = $.trim($tr.children(".course-room").text());
        $courseEnrolled = $.trim($tr.children(".course-enrolled").text());
        rows.push({
          'tr': $tr,
          'name':  $courseName,
          'instructor': $coursePtainstructor,
          'room': $courseRoom,
          'enrolled': $courseEnrolled,
        });
      });
      console.log(rows);

      function teacherSort(property, reverse) {
        reverse = (typeof reverse === "undefined") ? 0 : reverse;
        rows.sort(function(a,b) {
          if (reverse) {
            return a[property] < b[property];
          } else {
            return a[property] > b[property];
          }
        });
        $("table#courses tbody").html(rows[0].tr);
        // start with the second
        for (var i=1; i<rows.length; i++) {
          $("table#courses tbody").append(rows[i].tr);
        }
      }

      $("#sort-by-name").click(function() {
        // clear other elements' formatting, first line has to be for this element too
         
        temp = $(this).attr('data-reverse');
        $(".sort-by").removeAttr('data-reverse');
        $(this).attr('data-reverse',temp);
        reverse = 0;
        if ($(this).attr('data-reverse') == 1) {
          reverse = 1;
          $(this).removeAttr('data-reverse');
          $(this).children('span').html('&larr;');
        } else {
          $(this).attr('data-reverse',1);
          $(this).children('span').html('&rarr;');
        }
        teacherSort('name', reverse);
      });
      $("#sort-by-instructor").click(function() {
        // clear other elements' formatting, first line has to be for this element too
         
        temp = $(this).attr('data-reverse');
        $(".sort-by").removeAttr('data-reverse');
        $(this).attr('data-reverse',temp);
        reverse = 0;
        if ($(this).attr('data-reverse') == 1) {
          reverse = 1;
          $(this).removeAttr('data-reverse');
          $(this).children('span').html('&larr;');
        } else {
          $(this).attr('data-reverse',1);
          $(this).children('span').html('&rarr;');
        }
        teacherSort('instructor', reverse);
      });
      $("#sort-by-room").click(function() {
        // clear other elements' formatting, first line has to be for this element too
         
        temp = $(this).attr('data-reverse');
        $(".sort-by").removeAttr('data-reverse');
        $(this).attr('data-reverse',temp);
        reverse = 0;
        if ($(this).attr('data-reverse') == 1) {
          reverse = 1;
          $(this).removeAttr('data-reverse');
          $(this).children('span').html('&larr;');
        } else {
          $(this).attr('data-reverse',1);
          $(this).children('span').html('&rarr;');
        }
        teacherSort('room', reverse);
      });
      $("#sort-by-enrolled").click(function() {
        // clear other elements' formatting, first line has to be for this element too
         
        temp = $(this).attr('data-reverse');
        $(".sort-by").removeAttr('data-reverse');
        $(this).attr('data-reverse',temp);
        reverse = 0;
        if ($(this).attr('data-reverse') == 1) {
          reverse = 1;
          $(this).removeAttr('data-reverse');
          $(this).children('span').html('&larr;');
        } else {
          $(this).attr('data-reverse',1);
          $(this).children('span').html('&rarr;');
        }
        teacherSort('enrolled', reverse);
      });
    });
