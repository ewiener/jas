-# This file is app/views/students/index.html.haml
!!! 5

- content_for :title, "Students"

.row
  .span12#student-list
    %ul.nav.nav-tabs
      %li{active_if(@filter.empty?)}
        = link_to "All", semester_students_path(@semester)
      %li{active_if(@filter[:enrolled] == 'true')}
        = link_to "Enrolled", semester_students_path(@semester, :filter_enrolled => 'true')
      %li{active_if(@filter[:enrolled] == 'false')}
        = link_to "Not Enrolled", semester_students_path(@semester, :filter_enrolled => 'false')
      %li.pull-right
        = link_to "+ Add Student", new_semester_student_path

    .module-content
      %table.data-table.full-width#students
        %thead
          %tr
            %td
              %span.sort-by#sort-by-first
                First Name
            %td
              %span.sort-by#sort-by-last
                Last Name
            %td
              %span.sort-by#sort-by-grade
                Grade
            %td
              %span.sort-by#sort-by-teacher
                Teacher
            %td
              %span.sort-by#sort-by-classes
                Classes
            %td
              
        %tbody
          - if !@students.empty?
            - @students.each do |student|
              %tr
                %td.student-first
                  = link_to student.first_name, student_path(student)
                %td.student-last
                  = link_to student.last_name, student_path(student)
                %td.student-grade
                  = student.grade
                %td.student-teacher
                  = student.teacher ? link_to(student.teacher.name, teacher_path(student.teacher)) : ""
                %td.student-classes
                  = student.num_valid_enrollments
                %td.student-delete
                  = link_to "Delete", student_path(student), :method => :delete, :class => "btn btn-danger btn-mini"
          - else
            %tr
              %td.centered(colspan=6)
                None
                          
- content_for :js do
  :javascript
    $(function() {
      rows = [];
      $("table.students tbody tr.student-info").each(function() {
        $tr = $(this);
        $studentFirstName = $.trim($tr.children(".student-first").text());
        $studentLastName = $.trim($tr.children(".student-last").text());
        $studentGrade = $.trim($tr.children(".student-grade").text());
        if ($studentGrade == 'K' || $studentGrade == 'k') {
          $studentGrade = '0';
        }
        rows.push({
          'tr': $tr,
          'first': $studentFirstName,
          'last':  $studentLastName,
          'grade': $studentGrade,
        });
      });
      console.log(rows);
    
      function teacherSort(property, reverse) {
        reverse = (typeof reverse === "undefined") ? 0 : reverse;
        rows.sort(function(a,b) {
          if (reverse) {
            return a[property] < b[property];
          } else {
            return a[property] > b[property];
          }
        });
        $("table.students tbody").html(rows[0].tr);
        // start with the second
        for (var i=1; i<rows.length; i++) {
          $("table.students tbody").append(rows[i].tr);
        }
      }
    
      $("#sort-by-first").click(function() {
        // clear other elements' formatting, first line has to be for this element too
         
        temp = $(this).attr('data-reverse');
        $(".sort-by").removeAttr('data-reverse');
        $(this).attr('data-reverse',temp);
        reverse = 0;
        if ($(this).attr('data-reverse') == 1) {
          reverse = 1;
          $(this).removeAttr('data-reverse');
          $(this).children('span').html('&larr;');
        } else {
          $(this).attr('data-reverse',1);
          $(this).children('span').html('&rarr;');
        }
        teacherSort('first', reverse);
      });
      $("#sort-by-last").click(function() {
        // clear other elements' formatting, first line has to be for this element too
         
        temp = $(this).attr('data-reverse');
        $(".sort-by").removeAttr('data-reverse');
        $(this).attr('data-reverse',temp);
        reverse = 0;
        if ($(this).attr('data-reverse') == 1) {
          reverse = 1;
          $(this).removeAttr('data-reverse');
          $(this).children('span').html('&larr;');
        } else {
          $(this).attr('data-reverse',1);
          $(this).children('span').html('&rarr;');
        }
        teacherSort('last', reverse);
      });
      $("#sort-by-grade").click(function() {
        // clear other elements' formatting
    
        temp = $(this).attr('data-reverse');
        $(".sort-by").removeAttr('data-reverse');
        $(this).attr('data-reverse',temp);
    
        reverse = 0;
        if ($(this).attr('data-reverse') == 1) {
          reverse = 1;
          $(this).removeAttr('data-reverse');
          $(this).children('span').html('&larr;');
        } else {
          $(this).attr('data-reverse',1);
          $(this).children('span').html('&rarr;');
        }
        teacherSort('grade', reverse);
      });
    });

